# -*- eval: (setq org-download-image-dir (concat default-directory "./static/")); -*-
:PROPERTIES:
:ID:       F906C0B9-848E-48FB-8A88-48A0F8D3541B
:END:
#+DATE: <2022-06-28 Tue 01:49>
#+TITLE: ant_design

#+LATEX: \resizebox{\textwidth}{!}{
#+name: 分层-subgraph-table
| *cluster(必填)* | *label* | *style(默认"none")* | *color(默认"black")* | *nodestyle(默认"none")* | *nodecolor(默认"black")* | *nodeflow(必填, 以";" 分隔)* | *kwargs(以";" 结尾)* |
|-----------------+---------+---------------------+----------------------+-------------------------+--------------------------+------------------------------+----------------------|
| cluster_model   |         |                     |                      | box                     |                          | page; model; service         |                      |
#+LATEX: }
#+LATEX: \resizebox{\textwidth}{!}{
#+name: 分层-node-table
| *node(必填)* | *label* | *shape(默认"box")* | *style(可选"filled")* | *fillcolor(默认"none")* | *fontcolor(默认"black")* | *fontsize(默认"18", 数字必须是字符串格式)* | *kwargs(以"," 结尾)* |
|--------------+---------+--------------------+-----------------------+-------------------------+--------------------------+--------------------------------------------+----------------------|
| server       |         | box3d                |                       |                         |                          |                                            |                      |
#+LATEX: }
#+LATEX: \resizebox{\textwidth}{!}{
#+name: 分层-graph-table
| *from*  | *to*    | *label* | *style(默认"bold", 可选"dotted") | *color(默认"black")* | *fontcolor* | *tailport(可选"n","ne","e","se","sw","w","nw")* | *lhead(为子图的名称即 cluster 列的值)* | *ltail(为子图的名称即 cluster 列的值)* | *kwargs(以" " 结尾)* |
|---------+---------+---------+----------------------------------+----------------------+-------------+-------------------------------------------------+----------------------------------------+----------------------------------------+----------------------|
| page    | model   |         |                                  |                      |             |                                                 |                                        |                                        |                      |
| model   | service |         |                                  |                      |             |                                                 |                                        |                                        |                      |
| service | server  |         |                                  |                      |             |                                                 |                                        |                                        |                      |
#+LATEX: }
#+name: create-分层-from-tables
#+HEADER: :var subgraph=分层-subgraph-table nodes=分层-node-table graph=分层-graph-table
#+BEGIN_SRC emacs-lisp :results output :exports none
(concat
    (princ "//rankdir=LR;\n") ;; remove comment characters '//' for horizontal layout; add for vertical layout
    (princ "compound=true;\n")
    (mapconcat
      (lambda (x)
        (princ (replace-regexp-in-string "\\\\vert" "|" (format "subgraph %s {label=\"%s\"; style=%s; color=%s; node [style=%s, color=%s]; %s %s}
"
                          (car x)
                          (nth 1 x)
                          (if (string= "" (nth 2 x)) "none" (nth 2 x))
                          (if (string= "" (nth 3 x)) "black" (nth 3 x))
                          (if (string= "" (nth 4 x)) "none" (nth 4 x))
                          (if (string= "" (nth 5 x)) "black" (nth 5 x))
                          (nth 6 x)
                          (nth 7 x)
                          )))) subgraph "
")
    "\n"
    (mapconcat
      (lambda (x)
        (princ (replace-regexp-in-string "\\\\vert" "|" (format "%s[label=\"%s\", shape=%s, style=\"%s\", fillcolor=\"%s\", fontcolor=\"%s\", fontsize=\"%s\", %s];\n"
                          (car x)
                          (nth 1 x)
                          (if (string= "" (nth 2 x)) "box" (nth 2 x))
                          (if (string= "" (nth 3 x)) "none" (nth 3 x))
                          (if (string= "" (nth 4 x)) "none" (nth 4 x))
                          (if (string= "" (nth 5 x)) "black" (nth 5 x))
                          (if (string= "" (nth 6 x)) "18" (nth 6 x))
                          (nth 7 x)
                          )))) nodes "
")
    "\n"
    (mapconcat
    (lambda (x)
      (princ (replace-regexp-in-string "\\\\vert" "|" (format "%s -> %s [label=\"%s\" style=%s color=%s fontcolor=\"%s\" tailport=%s lhead=%s ltail=%s %s];\n"
              (car x)
              (nth 1 x)
              (nth 2 x)
              (if (string= "" (nth 3 x)) "bold" (nth 3 x))
              (if (string= "" (nth 4 x)) "black" (nth 4 x))
              (if (string= "" (nth 5 x)) "black" (nth 5 x))
              (if (string= "" (nth 6 x)) "none" (nth 5 x))
              (if (string= "" (nth 7 x)) "none" (nth 6 x))
              (if (string= "" (nth 8 x)) "none" (nth 7 x))
              (nth 9 x)
              )))) graph "\n"))
#+END_SRC

#+RESULTS: create-分层-from-tables
: //rankdir=LR;
: compound=true;
: subgraph cluster_model {label=""; style=none; color=black; node [style=box, color=black]; page; model; service }
: server[label="", shape=box3d, style="none", fillcolor="none", fontcolor="black", fontsize="18", ];
: page -> model [label="" style=bold color=black fontcolor="black" tailport=none lhead=none ltail=none ];
: model -> service [label="" style=bold color=black fontcolor="black" tailport=none lhead=none ltail=none ];
: service -> server [label="" style=bold color=black fontcolor="black" tailport=none lhead=none ltail=none ];

#+BEGIN_SRC dot :file ../static/ant_design/分层.png :var input=create-分层-from-tables :exports results
digraph {
  $input
}
#+END_SRC

#+RESULTS:
[[file:./static/ant_design/分层.png]]

- Page 负责与用户直接打交道：滇染页面，接受用户的操作输入，侧重于展示型交互性逻辑
- Model 负责处理业务逻辑，为 Page 做数据，状态的读写，变换，暂存等
- Service 负责与 HTTP 接口对接，进行纯粹的数据读写
