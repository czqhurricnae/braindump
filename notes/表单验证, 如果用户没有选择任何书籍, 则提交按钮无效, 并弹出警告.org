# -*- eval: (setq org-media-note-screenshot-image-dir (concat default-directory "./static/表单验证, 如果用户没有选择任何书籍, 则提交按钮无效, 并弹出警告/")); -*-
:PROPERTIES:
:ID:       F36C7F8F-0237-4526-96C0-3C1D8CAC776E
:END:
#+LATEX_CLASS: my-article
#+DATE: <2022-07-01 Fri 13:47>
#+TITLE: 表单验证, 如果用户没有选择任何书籍, 则提交按钮无效, 并弹出警告

#+BEGIN_SRC js
export class BookList extends Component {
    constructor(props) {
        super(props);
        this.state = {
            books: [
                {id:1, name: 'Zero to One', author: 'Peter Thiel' },
                {id:2, name: 'Monk who sold his Ferrari', author: 'Robin Sharma' },
                {id:3, name: 'Wings of Fire', author: 'A.P.J. Abdul Kalam' }
            ],
            selectedBooks:[],
            error: false,
        };
    }

    _renderBook(book) {
        return(
                <div className="checkbox" key={book.id}>
                <label>
                <input type="checkbox"
                value={book.name}
                onChange={this.handleSelectedBooks.bind(this)}/>
                        {book.name}-{book.author}
                </label>
            </div>
        );
    }

    _renderError() {
        if (this.state.error) {
            return(
                    <div className="alert alert-danger">
                        {this.state.error}
                    </div>
            );
        }
    }

    handleSelectedBooks(event) {
        let selectedBooks = this.state.selectedBooks;
        let index = selectedBooks.indexOf(event.target.value);

        if(event.target.checked) {
            if(-1 === index) {
                selectedBooks.push(event.target.value);
            }
        }
        else {
            selectedBooks.splice(index, 1);
        }

        this.setState({selectedBooks: selectedBooks}, () =>
                      console.log(this.state));
    }

    handleSubmit(event) {
        event.preventDefault();
        if (0 === this.state.selectedBooks.length) {
            this.setState({error: "Please choose at lease one book to continue!"});
        }
        else {
            this.setState({error: false});
            this.props.updateFormData(this.state.selectedBooks);
        }
    }

    render() {
        let errorMessage = this._renderError();
        return(<div>
                   <h3>
                       Choose fromwide variety of books available in our store.
                   </h3>
                   {errorMessage}
                   <form onSubmit={this.handleSubmit.bind(this)}>
                       {
                           this.state.books.map((book) => {
                               return(this._renderBook(book));
                           })
                       }
                       <input type="submit" className="btn btn-success"/>
                   </form>
                </div>
        );
    }
}
#+END_SRC
