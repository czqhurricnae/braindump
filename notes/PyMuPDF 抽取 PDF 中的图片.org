# -*- eval: (setq org-media-note-screenshot-image-dir (concat default-directory "./static/PyMuPDF 抽取 PDF 中的图片/")); -*-
:PROPERTIES:
:ID:       1A5E62D5-AD59-40F6-9E47-72CB89FE0CC5
:END:
#+LATEX_CLASS: my-article
#+DATE: <2022-07-19 Tue 20:08>
#+TITLE: PyMuPDF 抽取 PDF 中的图片
#+ROAM_KEY: https://github.com/xieyan0811/pdfconv/blob/master/pdfconv.py
#+ROAM_KEY: https://www.thepythoncode.com/article/extract-pdf-images-in-python?ref=morioh.com&utm_source=morioh.com
#+ROAM_KEY: https://github.com/pymupdf/PyMuPDF-Utilities/blob/master/examples/extract-imga.py
#+PDF_KEY: /Users/c/Downloads/审核项目单 internal audit check list（ndt 审核项目单）.pdf
#+PAGE_KEY: (1 2 3)

#+BEGIN_SRC python :results raw drawer values list :exports no-eval
# -*- coding:utf-8 -*-
#!/usr/bin/env python3
import fitz

file = u"/Users/c/Library/Mobile Documents/iCloud~QReader~MarginStudy/Documents/II 类/27-05 升降舵及调整片控制系统.pdf"
pdf_file = fitz.open(file)

# iterate over PDF pages
for page_index in range(len(pdf_file)):
    # get the page itself
    page = pdf_file[page_index]
    image_list = page.get_images()
    # print number of images found in this page
    if image_list:
        print(f"[+] Found a total of {len(image_list)} images in page {page_index}")
    else:
        print(f"[!] No images found on page", page_index)
    for image_index, img in enumerate(page.get_images(), start=1):
        # get the XREF of the images
        xref = img[0]
        base_image = pdf_file.extract_image(xref)
        # get the image extension
        image_ext = base_image["ext"]
        pix = fitz.Pixmap(pdf_file, xref)
        if pix.n < 5:
            pix.pil_save(f"page{page_index+1}_image{image_index}.{image_ext}")
        else:
            pix0 = fitz.Pixmap(fitz.csRGB, pix)
            pix0.pil_save(f"page{page_index+1}_image{image_index}.{image_ext}")
            pix0 = None
#+END_SRC
